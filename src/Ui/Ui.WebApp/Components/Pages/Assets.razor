@page "/assets"
@using System.Net
@using System.Text.Json
@using System.Text.Json.Serialization
@using devdeer.AssetsManager.Logic.Models
@using devdeer.AssetsManager.Ui.WebApp.Components.Dialogs
@inject HttpClient HttpClient
@inject IDialogService DialogService
@attribute [StreamRendering]

<PageTitle>Assets</PageTitle>

<h1>Assets</h1>

<MudButton @onclick="OpenDialog" Variant="Variant.Filled" Color="Color.Primary">
    Open Simple Dialog
</MudButton>

<MudTable Items="@_elements" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Image</MudTh>
        <MudTh>AssetKey</MudTh>
        <MudTh>Availability</MudTh>
        <MudTh>Ownership</MudTh>
        <MudTh>Brand</MudTh>
        <MudTh>Serial No</MudTh>
        <MudTh>Location</MudTh>
        <MudTh>Workplace</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Image"><MudImage Height="48" Src="@(context.PrimaryImagePath ?? "https://placehold.co/48?text=_")"></MudImage></MudTd>
        <MudTd DataLabel="AssetKey">@context.AssetKey</MudTd>
        <MudTd DataLabel="Availability">@context.Availability</MudTd>
        <MudTd DataLabel="Ownership">@context.Ownership</MudTd>
        <MudTd DataLabel="Brand">@context.Brand?.Label</MudTd>
        <MudTd DataLabel="Serial No">@context.SerialNumber</MudTd>
        <MudTd DataLabel="Location">@(context.Location?.Label ?? "?")</MudTd>
        <MudTd DataLabel="Workplace">@(context.Workplace?.Label ?? "?")</MudTd>
    </RowTemplate>
</MudTable>

@code {

    private bool _loading;
    private AssetModel[] _elements = [];

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        var response = await HttpClient.GetAsync("Asset");
        if (response.StatusCode == HttpStatusCode.NotFound)
        {
            _elements = [];
            _loading = false;
            return;
        }
        response.EnsureSuccessStatusCode();
        var content = await response.Content.ReadAsStringAsync();
        _elements = JsonSerializer.Deserialize<AssetModel[]>(content, new JsonSerializerOptions
        {
            PropertyNameCaseInsensitive = true,
            PropertyNamingPolicy = JsonNamingPolicy.CamelCase,
            Converters = { new JsonStringEnumConverter(JsonNamingPolicy.CamelCase) }
        }) ?? [];
        _loading = false;
    }

    private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<SampleDialog>("Simple Dialog", options);
    }

}