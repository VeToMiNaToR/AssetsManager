@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="@IsDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1" Class="d-flex">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@DrawerToggle" />
        <MudText Typo="Typo.h6">AssetsManager</MudText>
        <h2 class="flex-grow-1"></h2>
        <MudSwitch @bind-value="@IsDarkMode" Color="Color.Primary" Class="ma-4" T="bool" ThumbIcon="@(IsDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)" />
        <Login />
    </MudAppBar>
    <MudDrawer @bind-Open="@IsDrawerOpen" ClipMode="DrawerClipMode.Always" Elevation="1" Variant="@DrawerVariant.Mini" OpenMiniOnHover="false">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <div class="pa-10">
            @Body
        </div>
    </MudMainContent>
</MudLayout>


@code {
    private static bool _drawerOpen = true;
    private static bool _isDarkMode;

    private readonly MudTheme _theme = new()
    {
        Typography = new Typography
        {
            Default = new Default
            {
                FontFamily = new[] { "Helvetica", "Arial", "sans-serif" }
            }
        }
    };

    /// <summary>
    /// Callback to toggle the state of the menu drawer.
    /// </summary>
    void DrawerToggle()
    {
        IsDrawerOpen = !IsDrawerOpen;
    }

    /// <summary>
    /// Indicates if dark mode is currently used in the app.
    /// </summary>
    private bool IsDarkMode
    {
        get => _isDarkMode;
        set => _isDarkMode = value;
    }

    /// <summary>
    /// Indicates if the menu drawer is open currently.
    /// </summary>
    private bool IsDrawerOpen
    {
        get => _drawerOpen;
        set => _drawerOpen = value;
    }

}